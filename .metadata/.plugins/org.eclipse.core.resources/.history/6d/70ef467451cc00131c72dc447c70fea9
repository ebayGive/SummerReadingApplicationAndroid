package com.sccl.summerreadingapp.clients;

import java.util.ArrayList;
import java.util.List;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.util.Log;

import com.sccl.summerreadingapp.GridActivityAsyncListener;
import com.sccl.summerreadingapp.SummerReadingApplication;
import com.sccl.summerreadingapp.helper.JSONResultParser;
import com.sccl.summerreadingapp.helper.ServiceInvoker;
import com.sccl.summerreadingapp.model.Account;
import com.sccl.summerreadingapp.model.Branch;
import com.sccl.summerreadingapp.model.GridActivity;
import com.sccl.summerreadingapp.model.User;

/**
 * Async task class to get json by making HTTP call
 * */
public class BranchClient extends AsyncTask<Void, Void, Void> {
	
	private static final String GRID_ACTIVITY_REQUEST = "http://hackathon.ebaystratus.com/branch.json";
	private Activity parent;
	private ProgressDialog pDialog;
	
	// JSON Node names

//	public GridActivityClient(Activity parent, GridActivityAsyncListener listener, User user, GridActivity gridActivities) {
	public BranchClient(Activity parent) {
		super();
		this.parent = parent;
	}

	@Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
        pDialog = new ProgressDialog(parent);
        pDialog.setMessage("Setting Grid result...");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
		SummerReadingApplication summerReadingApplication = (SummerReadingApplication) parent.getApplicationContext();
	       String jsonStr = new ServiceInvoker().invoke(GRID_ACTIVITY_REQUEST, ServiceInvoker.GET);
	       Branch branch = null;

	        Log.d("Response: ", "> " + jsonStr);

	        if (jsonStr != null) {
	            try {
	                JSONObject jsonObj = new JSONObject(jsonStr);
	                branch = Branch.createBranch(jsonObj);
	            } catch (JSONException e) {
	                e.printStackTrace();
	            }
	        } else {
	            Log.e("ServiceHandler", "Couldn't get any data from the url");
	        }
	        
	   if (branch != null) {
		   summerReadingApplication.setBranch(branch);
	   }
	        
        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
//        listener.onResult(result);
    }

}
