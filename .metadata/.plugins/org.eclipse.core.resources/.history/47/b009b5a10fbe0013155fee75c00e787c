package com.sccl.summerreadingapp.helper;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.util.Log;

import com.sccl.summerreadingapp.model.Account;
import com.sccl.summerreadingapp.model.GridActivity;
import com.sccl.summerreadingapp.model.User;

/**
 * Async task class to get json by making HTTP call
 * */
public class GetAccountDetails extends AsyncTask<Void, Void, Void> {
	
	private Activity parent;
	private ProgressDialog pDialog;
	// Hashmap for ListView
    ArrayList<HashMap<String, String>> contactList;
    Account account;
	

	public GetAccountDetails(Activity parent) {
		super();
		this.parent = parent;
	}

	@Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
        pDialog = new ProgressDialog(parent);
        pDialog.setMessage("Please wait...");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceInvoker sh = new ServiceInvoker();
        String url = "http://hackathon.ebaystratus.com/accounts/2A8F81D9-F040-445C-BFA7-A44C26E9968B";

        // Making a request to url and getting response
       String jsonStr = sh.makeServiceCall(url, ServiceInvoker.GET);
       // String jsonStr = "";

        Log.d("Response: ", "> " + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);
                account = Account.createAccount(jsonObj);
                
                // Getting JSON Array node
                JSONArray users = jsonObj.getJSONArray(USERS);
                User user[] = new User[users.length()];

                // looping through All Users
                for (int i = 0; i < users.length(); i++) {
                    JSONObject userJson = users.getJSONObject(i);
                    user[i] = User.createUser(userJson);

                    JSONArray activityArray = userJson.getJSONArray(USER_GRIDS);
                    GridActivity activity[] = new GridActivity[activityArray.length()];
                    // looping through All Users
                    for (int j = 0; j < activityArray.length(); j++) {
                        JSONObject activityJson = activityArray.getJSONObject(i);
                        activity[j] = GridActivity.createGridActivity(activityJson);
                    }
                    user[i].setGridActivities(activity);
                }
                account.setUsers(user);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e("ServiceHandler", "Couldn't get any data from the url");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
        ListAdapter adapter = new SimpleAdapter(
                MainActivity.this, contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
         * */
    }

}
